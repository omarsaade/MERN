{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\10User\\\\Documents\\\\Mern\\\\mern\\\\src\\\\places\\\\pages\\\\NewPlace.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport \"./PlaceForm.css\";\n\n/* \n\nReducer\n\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewPlace = () => {\n  _s();\n  useForm({\n    title: {\n      value: \"\",\n      isValid: false\n    },\n    description: {\n      value: \"\",\n      isValid: false\n    },\n    address: {\n      value: \"\",\n      isValid: false\n    }\n  });\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: \"INPUT_CHANGE\",\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n  const placeSubmitHandler = event => {\n    event.preventDefault();\n    console.log(formState.inputs); // send this to the backend!\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"place-form\",\n    onSubmit: placeSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      id: \"title\",\n      element: \"input\",\n      type: \"text\",\n      label: \"Title\",\n      validators: [VALIDATOR_REQUIRE()],\n      errorText: \"Please enter a valid title.\",\n      onInput: inputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"description\",\n      element: \"textarea\",\n      label: \"Description\",\n      validators: [VALIDATOR_MINLENGTH(5)],\n      errorText: \"Please enter a valid description (at least 5 characters).\",\n      onInput: inputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"address\",\n      element: \"input\",\n      label: \"Address\",\n      validators: [VALIDATOR_REQUIRE()],\n      errorText: \"Please enter a valid address.\",\n      onInput: inputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      disabled: !formState.isValid,\n      children: \"ADD PLACE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(NewPlace, \"OkrkYNc+ZNxzq6F1a12m+AiMnfs=\", false, function () {\n  return [useForm];\n});\n_c = NewPlace;\nexport default NewPlace;\n\n/*\n\n\n\n\n\n\n\n\n\n\n\n              WHITOUT CUSTOM HOOK\n\n\n\n\n\n\n\n\n\n\nimport React, { useCallback, useReducer } from \"react\";\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH,\n} from \"../../shared/util/validators\";\nimport \"./PlaceForm.css\";\n\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case \"INPUT_CHANGE\":\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid },\n        },\n        isValid: formIsValid,\n      };\n    default:\n      return state;\n  }\n};\n\n\n\nconst NewPlace = () => {\n  //\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: {\n      title: { value: \"\", isValid: false },\n      description: { value: \"\", isValid: false },\n      address: { value: \"\", isValid: false },\n    },\n    isValid: false,\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: \"INPUT_CHANGE\",\n      value: value,\n      isValid: isValid,\n      inputId: id,\n    });\n  }, []);\n\n  const placeSubmitHandler = (event) => {\n    event.preventDefault();\n    console.log(formState.inputs); // send this to the backend!\n  };\n\n  return (\n    <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n      <Input\n        id=\"title\"\n        element=\"input\"\n        type=\"text\"\n        label=\"Title\"\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText=\"Please enter a valid title.\"\n        onInput={inputHandler}\n      />\n      <Input\n        id=\"description\"\n        element=\"textarea\"\n        label=\"Description\"\n        validators={[VALIDATOR_MINLENGTH(5)]}\n        errorText=\"Please enter a valid description (at least 5 characters).\"\n        onInput={inputHandler}\n      />\n      <Input\n        id=\"address\"\n        element=\"input\"\n        label=\"Address\"\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText=\"Please enter a valid address.\"\n        onInput={inputHandler}\n      />\n      <Button type=\"submit\" disabled={!formState.isValid}>\n        ADD PLACE\n      </Button>\n    </form>\n  );\n};\n\nexport default NewPlace;\n\n*/\nvar _c;\n$RefreshReg$(_c, \"NewPlace\");","map":{"version":3,"names":["React","Input","Button","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","useForm","NewPlace","title","value","isValid","description","address","inputHandler","useCallback","id","dispatch","type","inputId","placeSubmitHandler","event","preventDefault","console","log","formState","inputs"],"sources":["C:/Users/10User/Documents/Mern/mern/src/places/pages/NewPlace.js"],"sourcesContent":["import React from \"react\";\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH,\n} from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport \"./PlaceForm.css\";\n\n/* \n\nReducer\n\n*/\n\nconst NewPlace = () => {\n  useForm({\n    title: { value: \"\", isValid: false },\n    description: { value: \"\", isValid: false },\n    address: { value: \"\", isValid: false },\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: \"INPUT_CHANGE\",\n      value: value,\n      isValid: isValid,\n      inputId: id,\n    });\n  }, []);\n\n  const placeSubmitHandler = (event) => {\n    event.preventDefault();\n    console.log(formState.inputs); // send this to the backend!\n  };\n\n  return (\n    <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n      <Input\n        id=\"title\"\n        element=\"input\"\n        type=\"text\"\n        label=\"Title\"\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText=\"Please enter a valid title.\"\n        onInput={inputHandler}\n      />\n      <Input\n        id=\"description\"\n        element=\"textarea\"\n        label=\"Description\"\n        validators={[VALIDATOR_MINLENGTH(5)]}\n        errorText=\"Please enter a valid description (at least 5 characters).\"\n        onInput={inputHandler}\n      />\n      <Input\n        id=\"address\"\n        element=\"input\"\n        label=\"Address\"\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText=\"Please enter a valid address.\"\n        onInput={inputHandler}\n      />\n      <Button type=\"submit\" disabled={!formState.isValid}>\n        ADD PLACE\n      </Button>\n    </form>\n  );\n};\n\nexport default NewPlace;\n\n/*\n\n\n\n\n\n\n\n\n\n\n\n              WHITOUT CUSTOM HOOK\n\n\n\n\n\n\n\n\n\n\nimport React, { useCallback, useReducer } from \"react\";\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH,\n} from \"../../shared/util/validators\";\nimport \"./PlaceForm.css\";\n\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case \"INPUT_CHANGE\":\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid },\n        },\n        isValid: formIsValid,\n      };\n    default:\n      return state;\n  }\n};\n\n\n\nconst NewPlace = () => {\n  //\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: {\n      title: { value: \"\", isValid: false },\n      description: { value: \"\", isValid: false },\n      address: { value: \"\", isValid: false },\n    },\n    isValid: false,\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: \"INPUT_CHANGE\",\n      value: value,\n      isValid: isValid,\n      inputId: id,\n    });\n  }, []);\n\n  const placeSubmitHandler = (event) => {\n    event.preventDefault();\n    console.log(formState.inputs); // send this to the backend!\n  };\n\n  return (\n    <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n      <Input\n        id=\"title\"\n        element=\"input\"\n        type=\"text\"\n        label=\"Title\"\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText=\"Please enter a valid title.\"\n        onInput={inputHandler}\n      />\n      <Input\n        id=\"description\"\n        element=\"textarea\"\n        label=\"Description\"\n        validators={[VALIDATOR_MINLENGTH(5)]}\n        errorText=\"Please enter a valid description (at least 5 characters).\"\n        onInput={inputHandler}\n      />\n      <Input\n        id=\"address\"\n        element=\"input\"\n        label=\"Address\"\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText=\"Please enter a valid address.\"\n        onInput={inputHandler}\n      />\n      <Button type=\"submit\" disabled={!formState.isValid}>\n        ADD PLACE\n      </Button>\n    </form>\n  );\n};\n\nexport default NewPlace;\n\n*/\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,KAAK,MAAM,4CAA4C;AAC9D,OAAOC,MAAM,MAAM,6CAA6C;AAChE,SACEC,iBAAiB,EACjBC,mBAAmB,QACd,8BAA8B;AACrC,SAASC,OAAO,QAAQ,8BAA8B;AACtD,OAAO,iBAAiB;;AAExB;AACA;AACA;AACA;AACA;AAJA;AAMA,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACrBD,OAAO,CAAC;IACNE,KAAK,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAM,CAAC;IACpCC,WAAW,EAAE;MAAEF,KAAK,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAM,CAAC;IAC1CE,OAAO,EAAE;MAAEH,KAAK,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAM;EACvC,CAAC,CAAC;EAEF,MAAMG,YAAY,GAAGC,WAAW,CAAC,CAACC,EAAE,EAAEN,KAAK,EAAEC,OAAO,KAAK;IACvDM,QAAQ,CAAC;MACPC,IAAI,EAAE,cAAc;MACpBR,KAAK,EAAEA,KAAK;MACZC,OAAO,EAAEA,OAAO;MAChBQ,OAAO,EAAEH;IACX,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,kBAAkB,GAAIC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,EAAE;IACtBC,OAAO,CAACC,GAAG,CAACC,SAAS,CAACC,MAAM,CAAC,CAAC,CAAC;EACjC,CAAC;;EAED,oBACE;IAAM,SAAS,EAAC,YAAY;IAAC,QAAQ,EAAEN,kBAAmB;IAAA,wBACxD,QAAC,KAAK;MACJ,EAAE,EAAC,OAAO;MACV,OAAO,EAAC,OAAO;MACf,IAAI,EAAC,MAAM;MACX,KAAK,EAAC,OAAO;MACb,UAAU,EAAE,CAACf,iBAAiB,EAAE,CAAE;MAClC,SAAS,EAAC,6BAA6B;MACvC,OAAO,EAAES;IAAa;MAAA;MAAA;MAAA;IAAA,QACtB,eACF,QAAC,KAAK;MACJ,EAAE,EAAC,aAAa;MAChB,OAAO,EAAC,UAAU;MAClB,KAAK,EAAC,aAAa;MACnB,UAAU,EAAE,CAACR,mBAAmB,CAAC,CAAC,CAAC,CAAE;MACrC,SAAS,EAAC,2DAA2D;MACrE,OAAO,EAAEQ;IAAa;MAAA;MAAA;MAAA;IAAA,QACtB,eACF,QAAC,KAAK;MACJ,EAAE,EAAC,SAAS;MACZ,OAAO,EAAC,OAAO;MACf,KAAK,EAAC,SAAS;MACf,UAAU,EAAE,CAACT,iBAAiB,EAAE,CAAE;MAClC,SAAS,EAAC,+BAA+B;MACzC,OAAO,EAAES;IAAa;MAAA;MAAA;MAAA;IAAA,QACtB,eACF,QAAC,MAAM;MAAC,IAAI,EAAC,QAAQ;MAAC,QAAQ,EAAE,CAACW,SAAS,CAACd,OAAQ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAE1C;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEX,CAAC;AAAC,GArDIH,QAAQ;EAAA,QACZD,OAAO;AAAA;AAAA,KADHC,QAAQ;AAuDd,eAAeA,QAAQ;;AAEvzHA;AAAA"},"metadata":{},"sourceType":"module"}