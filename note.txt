megamobile
megamobile111

user : megamobile@admin 
================
backend   MVC : Model View Controller


    1-  app.js: starting path (index.js)
         middleware function for handling error
     
    2-  routes: 
      places-routes: (exact path , fn) + validation 
      users-routes:  (exact path , fn) + validation 

    3-  controllers: 
      places-controllers.js: middleware fun tab3un kell path khassa bel places
      getPlaceById , getPlacesByUserId , createPlace , updatePlace , deletePlace

      users-controllers.js: middleware fun tab3un kell path khassa bel users
      getUsers , signup , login
       
      
     4-  models: Class HttpError (customizating error)
      

     5-  util: Location.js: converting addresses to coordinates


       
   



===============================================================


app.js


//  Third party library
const express = require("express");
const bodyParser = require("body-parser");
// importing our routes
const placesRoutes = require("./routes/places-routes");

const app = express();

app.use("/api/places", placesRoutes);

app.use((error, req, res, next) => {
  if (res.headersSent) {
    console.log(res.headersSent);
    return next(error);
  }
  res.status(error.code || 500);
  //   res.status(error.code || 500).json(...); fina na3mul chaining
  res.json({ message: error.message || "An unknown error occured!" });
});

app.listen(5000);







places-routes.js

const express = require("express");
const router = express.Router();

const DUMMY_PLACES = [
  {
    id: "p1",
    title: "Empire State Building",
    description: "One of the most famous sky scarpers in the world!",
    location: {
      lat: 40.7484474,
      lng: -73.987156,
    },
    address: "20 w 34th ST,  New York , NY 10001",
    creator: "u1",
  },
];

router.get("/:pid", (req, res, next) => {
  const placeId = req.params.pid;
  const place = DUMMY_PLACES.find((p) => {
    return p.id === placeId;
  });

  if (!place) {
    // kif mna3mul handle ?
    // 1 throw new Error(..) aw 2 next("error...");
    // async ..use next()  / synchronous use throw error
    const error = new Error("Could not find a place for the provided id.");
    error.code = 404;
    throw error;
  }

  res.json({ place }); // => {place} => {place:place}
});

router.get("/user/:uid", (req, res, next) => {
  const userId = req.params.uid;
  const place = DUMMY_PLACES.find((p) => {
    return p.creator === userId;
  });
  if (!place) {
    const error = new Error("Could not find a place for the provided user id.");
    error.code = 404;
    return next(error); // hon darure nhet return..fo2 throw hye bta3mul return
    // return res
    //   .status(404)
    //   .json({ message: "Could not find a place for the provided user id." });
  }
  res.json({ place });
});

module.exports = router;



================================================
google geocoding api

==================================================================================================================================
==================================================================================================================================
==================================================================================================================================
==================================================================================================================================
==================================================================================================================================
==================================================================================================================================

How to upload multiple images instead of single image
4 upvotes
Lampros · Lecture 164 · 3 years ago
Hello!

I have spent many hours and days trying to figure out how multiple images upload can work on New Place form. I know it's not what this course handles, but as I am following and learning this course content all the way from the beginning, I am very confused on other tutorials about this issue.

I have changed on the back-end on the router.post the fileUpload from  "fileUpload.single('image') to "fileUpload.array('image')"

to accept an array of images.

I have changed on the front-end on the ImageUpload Component, on the pickedHandler function like:

if (event.target.files && event.target.files.length !== 0) {
      pickedFile = event.target.files;
and added multiple on the <input     multiple />

I am not sure if the above changes are completely right and also,

I don't know how is this going to work on the NewPlace Component (maybe with a loop?)

I just want to make this work giving the possibility to the user to pick either one image either more than one.

I really appreciate this work, and also understand that can't all topics be covered but i really need to know how I can handle this issue, cause my University thesis project is based on this course, and as it's maybe a quick change for someone, please share your knowledge.

Thanks in advance

====================================================
he awal user
megamobile
megamobile111
user : megamobile@admin 

====================
tene user bel dabs
insearch
insearchofincredible

/*


{
  "name": "backend",
  "version": "1.0.0",
  "description": "",
  "main": "app.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "start": "nodemon app.js"
  },
  "author": "",
  "license": "ISC",
  "dependencies": {
    "@omarsaade/cors-node": "^1.1.1",
    "axios": "^1.2.5",
    "bcryptjs": "^2.4.3",
    "body-parser": "^1.20.1",
    "express": "^4.18.2",
    "express-validator": "^6.14.3",
    "jsonwebtoken": "^9.0.0",
    "mongoose": "^6.9.0",
    "mongoose-unique-validator": "^3.1.0",
    "multer": "^1.4.5-lts.1",
    "uuid": "^9.0.0"
  },
  "devDependencies": {
    "nodemon": "^2.0.20"
  }
}








*/
AIzaSyDgLmMpKCzveJf1_yuA0fUzzhy0WRChvZA